erdiagram ResourceFinder
notation=crowsfoot
//Contributors: Lizeth A.N (Goku900)
//v1.0 has been revised using feedback and recommendations give by ChatGPT versions o1-preview and 4o
//https://chatgpt.com/share/66e62720-1704-8003-a2a5-31f89e100e16 & https://chatgpt.com/share/66e6274a-46d4-8003-ab50-9adb1c5f8049

entity User {
    userId key
    email
    username
    firstName
    //we could have age range, rather than collect users DOB
    //maybe even birthyear only. LETS DO THE RANGE rather than the DOB
    DOB
    hashedPasswd
    zipcode
    //standard user role, admin role, organization role
    role
}

//dependents table e.g. mother has a child ect..

entity Recommendation {
    //userId, organizationId are foreign keys, create a composite key from these
    userId key
    organizationId key
    createdAt
}

//entity Survey

relationship has_recommendations {
    User[0..N] -> Recommendation[0..N]
}

entity Organization {
    organizationId key
    name
    //split address into street, city, state, and zipcode during normalization
    address
    category
    email
    phoneNumber
    webLink
    servicesSummary
    createdAt
    updatedAt
    //added role attribute
    role
}

relationship associated {
    Organization[1] -> Review[0..N]
}

weak entity Review {
    //organizationId and userId are foreign keys
    organizationId key
    reviewId partial-key
    userId key
    commentID
    //starsValue must have a range constraint e.g. 1-5
    starsValue
    createdAt
    updatedAt
}

relationship assigned {
    Organization[0..N] -> Category[1..N]
}

entity Category {
    id key
    name
}

relationship writes {
    //A user can write 0 or many reviews
    // A review must've been written by 1 user
    User[1] -> Review[0..N]
}

relationship comments {
    User[1] -> ReviewComment[0..N]
}

weak entity ReviewComment {
    //id and reviewId can be combined to form a composite primary key
    //reviewId is a foreign key Review(reviewId)
    CommentId partial-key
    reviewId key
    userId
    postBody
    createdAt
    updatedAt
}